apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: "frontend"
    {{- include "scicat.labels" . | nindent 4 }}
  name: frontend
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
      matchLabels:
        app.kubernetes.io/component: "frontend"
        {{- include "scicat.selectorLabels" . | nindent 8 }}
  strategy:
      rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
      type: RollingUpdate
  template:
    metadata:
      annotations:
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: "frontend"
        {{- include "scicat.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      affinity: {}
      containers:
        - image: {{ .Values.frontend.image | default "scicatfrontend" | quote }}
          imagePullPolicy: Always
          name: frontend
          ports:
            - containerPort: 80
              name: http
              protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /usr/share/nginx/html/assets/config.json
              name: frontendconfig
              readOnly: true
              subPath: frontend.config.json
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - name: frontendconfig
          secret:
            defaultMode: 420
            optional: true
            secretName: frontend-conf

